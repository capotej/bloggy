--- !ruby/object:RI::MethodDescription 
visibility: public
block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Destroys the records matching <tt>conditions</tt> by instantiating each record
    and calling their <tt>destroy</tt> method. This means at least 2*N database queries
    to destroy N records, so avoid <tt>destroy_all</tt> if you are deleting many records.
    If you want to simply delete records without worrying about dependent associations
    or callbacks, use the much faster <tt>delete_all</tt> method instead.
- !ruby/struct:SM::Flow::H 
  text: Parameters
  level: 4
- !ruby/object:SM::Flow::LIST 
  type: :BULLET
  contents: 
  - !ruby/struct:SM::Flow::LI 
    body: <tt>conditions</tt> - Conditions are specified the same way as with <tt>find</tt>
      method.
    label: '*'
- !ruby/struct:SM::Flow::H 
  text: Example
  level: 4
- !ruby/struct:SM::Flow::VERB 
  body: "  Person.destroy_all(&quot;last_login &lt; '2004-04-04'&quot;)\n"
- !ruby/struct:SM::Flow::P 
  body: This loads and destroys each person one by one, including its dependent associations
    and before_ and after_destroy callbacks.
- !ruby/struct:SM::Flow::P 
  body: '<tt>conditions</tt> can be anything that <tt>find</tt> also accepts:'
- !ruby/struct:SM::Flow::VERB 
  body: "  Person.destroy_all(:last_login =&gt; 6.hours.ago)\n"
full_name: ActiveRecord::Base::destroy_all
params: (conditions = nil)
name: destroy_all
is_singleton: true
aliases: []

