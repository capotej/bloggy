--- !ruby/object:RI::MethodDescription 
visibility: protected
block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Sanitizes a hash of attribute/value pairs into SQL conditions for a WHERE
    clause.
- !ruby/struct:SM::Flow::VERB 
  body: "  { :name =&gt; &quot;foo'bar&quot;, :group_id =&gt; 4 }\n    # =&gt; &quot;name='foo''bar' \
    and group_id= 4&quot;\n  { :status =&gt; nil, :group_id =&gt; [1,2,3] }\n    # \
    =&gt; &quot;status IS NULL and group_id IN (1,2,3)&quot;\n  { :age =&gt; 13..18 \
    }\n    # =&gt; &quot;age BETWEEN 13 AND 18&quot;\n  { 'other_records.id' =&gt; \
    7 }\n    # =&gt; &quot;`other_records`.`id` = 7&quot;\n  { :other_records =&gt; \
    { :id =&gt; 7 } }\n    # =&gt; &quot;`other_records`.`id` = 7&quot;\n"
- !ruby/struct:SM::Flow::P 
  body: 'And for value objects on a composed_of relationship:'
- !ruby/struct:SM::Flow::VERB 
  body: "  { :address =&gt; Address.new(&quot;123 abc st.&quot;, &quot;chicago&quot;) \
    }\n    # =&gt; &quot;address_street='123 abc st.' and address_city='chicago'&quot;\n"
full_name: ActiveRecord::Base::sanitize_sql_hash_for_conditions
params: (attrs, table_name = quoted_table_name)
name: sanitize_sql_hash_for_conditions
is_singleton: true
aliases: []

