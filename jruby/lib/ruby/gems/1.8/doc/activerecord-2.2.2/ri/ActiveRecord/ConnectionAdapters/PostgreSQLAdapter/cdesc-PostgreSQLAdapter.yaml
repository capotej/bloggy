--- !ruby/object:RI::ClassDescription 
includes: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: The PostgreSQL adapter works both with the native C (http://ruby.scripting.ca/postgres/)
    and the pure Ruby (available both as gem and from http://rubyforge.org/frs/?group_id=234&amp;release_id=1944)
    drivers.
- !ruby/struct:SM::Flow::P 
  body: 'Options:'
- !ruby/object:SM::Flow::LIST 
  type: :BULLET
  contents: 
  - !ruby/struct:SM::Flow::LI 
    body: <tt>:host</tt> - Defaults to &quot;localhost&quot;.
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: <tt>:port</tt> - Defaults to 5432.
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: <tt>:username</tt> - Defaults to nothing.
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: <tt>:password</tt> - Defaults to nothing.
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: <tt>:database</tt> - The name of the database. No default, must be provided.
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: <tt>:schema_search_path</tt> - An optional schema search path for the connection
      given as a string of comma-separated schema names. This is backward-compatible
      with the <tt>:schema_order</tt> option.
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: <tt>:encoding</tt> - An optional client encoding that is used in a <tt>SET
      client_encoding TO &lt;encoding&gt;</tt> call on the connection.
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: <tt>:min_messages</tt> - An optional client min messages that is used in
      a <tt>SET client_min_messages TO &lt;min_messages&gt;</tt> call on the connection.
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: <tt>:allow_concurrency</tt> - If true, use async query methods so Ruby threads
      don't deadlock; otherwise, use blocking query methods.
    label: '*'
attributes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: active?
- !ruby/object:RI::MethodSummary 
  name: adapter_name
- !ruby/object:RI::MethodSummary 
  name: add_column
- !ruby/object:RI::MethodSummary 
  name: begin_db_transaction
- !ruby/object:RI::MethodSummary 
  name: change_column
- !ruby/object:RI::MethodSummary 
  name: change_column_default
- !ruby/object:RI::MethodSummary 
  name: change_column_null
- !ruby/object:RI::MethodSummary 
  name: client_min_messages
- !ruby/object:RI::MethodSummary 
  name: client_min_messages=
- !ruby/object:RI::MethodSummary 
  name: columns
- !ruby/object:RI::MethodSummary 
  name: commit_db_transaction
- !ruby/object:RI::MethodSummary 
  name: create_database
- !ruby/object:RI::MethodSummary 
  name: current_database
- !ruby/object:RI::MethodSummary 
  name: disconnect!
- !ruby/object:RI::MethodSummary 
  name: encoding
- !ruby/object:RI::MethodSummary 
  name: escape_bytea
- !ruby/object:RI::MethodSummary 
  name: execute
- !ruby/object:RI::MethodSummary 
  name: indexes
- !ruby/object:RI::MethodSummary 
  name: insert
- !ruby/object:RI::MethodSummary 
  name: postgresql_version
- !ruby/object:RI::MethodSummary 
  name: reconnect!
- !ruby/object:RI::MethodSummary 
  name: remove_index
- !ruby/object:RI::MethodSummary 
  name: rename_column
- !ruby/object:RI::MethodSummary 
  name: rename_table
- !ruby/object:RI::MethodSummary 
  name: rollback_db_transaction
- !ruby/object:RI::MethodSummary 
  name: schema_search_path
- !ruby/object:RI::MethodSummary 
  name: schema_search_path=
- !ruby/object:RI::MethodSummary 
  name: select_rows
- !ruby/object:RI::MethodSummary 
  name: supports_ddl_transactions?
- !ruby/object:RI::MethodSummary 
  name: supports_insert_with_returning?
- !ruby/object:RI::MethodSummary 
  name: supports_migrations?
- !ruby/object:RI::MethodSummary 
  name: supports_standard_conforming_strings?
- !ruby/object:RI::MethodSummary 
  name: table_alias_length
- !ruby/object:RI::MethodSummary 
  name: tables
- !ruby/object:RI::MethodSummary 
  name: transaction
- !ruby/object:RI::MethodSummary 
  name: transaction_active?
- !ruby/object:RI::MethodSummary 
  name: type_to_sql
- !ruby/object:RI::MethodSummary 
  name: unescape_bytea
- !ruby/object:RI::MethodSummary 
  name: update_sql
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
full_name: ActiveRecord::ConnectionAdapters::PostgreSQLAdapter
constants: 
- !ruby/object:RI::Constant 
  comment: 
  value: '''PostgreSQL''.freeze'
  name: ADAPTER_NAME
- !ruby/object:RI::Constant 
  comment: 
  value: '{         :primary_key => "serial primary key".freeze,         :string      =>
    { :name => "character varying", :limit => 255 },         :text        => { :name
    => "text" },         :integer     => { :name => "integer" },         :float       =>
    { :name => "float" },         :decimal     => { :name => "decimal" },         :datetime    =>
    { :name => "timestamp" },         :timestamp   => { :name => "timestamp" },         :time        =>
    { :name => "time" },         :date        => { :name => "date" },         :binary      =>
    { :name => "bytea" },         :boolean     => { :name => "boolean" }'
  name: NATIVE_DATABASE_TYPES
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: ruby-pg defines Ruby constants for transaction status, ruby-postgres does
      not.
  value: 'defined?(PGconn::PQTRANS_IDLE) ? PGconn::PQTRANS_IDLE : 0'
  name: PQTRANS_IDLE
superclass: AbstractAdapter
name: PostgreSQLAdapter
