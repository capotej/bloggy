--- !ruby/object:RI::MethodDescription 
visibility: public
block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: If you have an attribute that needs to be saved to the database as an object,
    and retrieved as the same object, then specify the name of that attribute using
    this method and it will be handled automatically. The serialization is done through
    YAML. If <tt>class_name</tt> is specified, the serialized object must be of that
    class on retrieval or SerializationTypeMismatch will be raised.
- !ruby/struct:SM::Flow::H 
  text: Parameters
  level: 4
- !ruby/object:SM::Flow::LIST 
  type: :BULLET
  contents: 
  - !ruby/struct:SM::Flow::LI 
    body: <tt>attr_name</tt> - The field name that should be serialized.
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: <tt>class_name</tt> - Optional, class name that the object type should be
      equal to.
    label: '*'
- !ruby/struct:SM::Flow::H 
  text: Example
  level: 4
- !ruby/struct:SM::Flow::VERB 
  body: "  # Serialize a preferences attribute\n  class User\n    serialize :preferences\n\
    \  end\n"
full_name: ActiveRecord::Base::serialize
params: (attr_name, class_name = Object)
name: serialize
is_singleton: true
aliases: []

