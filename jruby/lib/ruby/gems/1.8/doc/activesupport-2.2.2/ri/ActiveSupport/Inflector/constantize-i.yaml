--- !ruby/object:RI::MethodDescription 
visibility: public
block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: 'Tries to find a constant with the name specified in the argument string:'
- !ruby/struct:SM::Flow::VERB 
  body: "  &quot;Module&quot;.constantize     # =&gt; Module\n  &quot;Test::Unit&quot;.constantize \
    # =&gt; Test::Unit\n"
- !ruby/struct:SM::Flow::P 
  body: 'The name is assumed to be the one of a top-level constant, no matter whether
    it starts with &quot;::&quot; or not. No lexical context is taken into account:'
- !ruby/struct:SM::Flow::VERB 
  body: "  C = 'outside'\n  module M\n    C = 'inside'\n    C               # =&gt; \
    'inside'\n    &quot;C&quot;.constantize # =&gt; 'outside', same as ::C\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: NameError is raised when the name is not in CamelCase or the constant is unknown.
full_name: ActiveSupport::Inflector#constantize
params: (camel_cased_word)
name: constantize
is_singleton: false
aliases: []

