--- !ruby/object:RI::ClassDescription 
includes: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Schema::Generator is an internal class that the user is not expected to instantiate
    directly. Instances are created by Database#create_table. It is used to specify
    table creation parameters. It takes a Database object and a block of column/index/constraint
    specifications, and gives the Database a table description, which the database
    uses to create a table.
- !ruby/struct:SM::Flow::P 
  body: Schema::Generator has some methods but also includes method_missing, allowing
    users to specify column type as a method instead of using the column method, which
    makes for a nicer DSL.
attributes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: check
- !ruby/object:RI::MethodSummary 
  name: column
- !ruby/object:RI::MethodSummary 
  name: constraint
- !ruby/object:RI::MethodSummary 
  name: create_info
- !ruby/object:RI::MethodSummary 
  name: foreign_key
- !ruby/object:RI::MethodSummary 
  name: full_text_index
- !ruby/object:RI::MethodSummary 
  name: has_column?
- !ruby/object:RI::MethodSummary 
  name: index
- !ruby/object:RI::MethodSummary 
  name: method_missing
- !ruby/object:RI::MethodSummary 
  name: primary_key
- !ruby/object:RI::MethodSummary 
  name: primary_key_name
- !ruby/object:RI::MethodSummary 
  name: spatial_index
- !ruby/object:RI::MethodSummary 
  name: unique
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
full_name: Sequel::Schema::Generator
constants: []

superclass: Object
name: Generator
