--- !ruby/object:RI::ClassDescription 
includes: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Eager loading makes it so that you can load all associated records for a set
    of objects in a single query, instead of a separate query for each object.
- !ruby/struct:SM::Flow::P 
  body: 'Two separate implementations are provided. #eager should be used most of
    the time, as it loads associated records using one query per association. However,
    it does not allow you the ability to filter based on columns in associated tables.
    #eager_graph loads all records in one query. Using #eager_graph you can filter
    based on columns in associated tables. However, #eager_graph can be much slower
    than #eager, especially if multiple *_to_many associations are joined.'
- !ruby/struct:SM::Flow::P 
  body: 'You can cascade the eager loading (loading associations'' associations) with
    no limit to the depth of the cascades. You do this by passing a hash to #eager
    or #eager_graph with the keys being associations of the current model and values
    being associations of the model associated with the current model via the key.'
- !ruby/struct:SM::Flow::P 
  body: 'The arguments can be symbols or hashes with symbol keys (for cascaded eager
    loading). Examples:'
- !ruby/struct:SM::Flow::VERB 
  body: "  Album.eager(:artist).all\n  Album.eager_graph(:artist).all\n  Album.eager(:artist, \
    :genre).all\n  Album.eager_graph(:artist, :genre).all\n  Album.eager(:artist).eager(:genre).all\n\
    \  Album.eager_graph(:artist).eager(:genre).all\n  Artist.eager(:albums=&gt;:tracks).all\n\
    \  Artist.eager_graph(:albums=&gt;:tracks).all\n  Artist.eager(:albums=&gt;{:tracks=&gt;:genre}).all\n\
    \  Artist.eager_graph(:albums=&gt;{:tracks=&gt;:genre}).all\n"
attributes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: eager
- !ruby/object:RI::MethodSummary 
  name: eager_graph
- !ruby/object:RI::MethodSummary 
  name: eager_graph_association
- !ruby/object:RI::MethodSummary 
  name: eager_graph_associations
- !ruby/object:RI::MethodSummary 
  name: eager_graph_build_associations
- !ruby/object:RI::MethodSummary 
  name: eager_unique_table_alias
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: extended
full_name: Sequel::Model::Associations::EagerLoading
constants: []

superclass: 
name: EagerLoading
