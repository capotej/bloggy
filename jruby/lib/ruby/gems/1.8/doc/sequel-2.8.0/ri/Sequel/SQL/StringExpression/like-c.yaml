--- !ruby/object:RI::MethodDescription 
visibility: public
block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Creates a SQL pattern match exprssion. left (l) is the SQL string we are matching
    against, and ces are the patterns we are matching. The match succeeds if any of
    the patterns match (SQL OR). Patterns can be given as strings or regular expressions.
    Strings will cause the SQL LIKE operator to be used, and should be supported by
    most databases. Regular expressions will probably only work on MySQL and PostgreSQL,
    and SQL regular expression syntax is not fully compatible with ruby regular expression
    syntax, so be careful if using regular expressions.
- !ruby/struct:SM::Flow::P 
  body: The pattern match will be case insensitive if the last argument is a hash
    with a key of :case_insensitive that is not false or nil. Also, if a case insensitive
    regular expression is used (//i), that particular pattern which will always be
    case insensitive.
full_name: Sequel::SQL::StringExpression::like
params: (l, *ces)
name: like
is_singleton: true
aliases: []

