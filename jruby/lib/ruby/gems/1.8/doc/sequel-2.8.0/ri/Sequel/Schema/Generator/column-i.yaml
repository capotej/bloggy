--- !ruby/object:RI::MethodDescription 
visibility: public
block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Add a column with the given name, type, and opts to the DDL.
- !ruby/struct:SM::Flow::P 
  body: 'You can also create columns via method missing, so the following are equivalent:'
- !ruby/struct:SM::Flow::VERB 
  body: "  column :number, :integer\n  integer :number\n"
- !ruby/struct:SM::Flow::P 
  body: 'The following options are supported:'
- !ruby/object:SM::Flow::LIST 
  type: :BULLET
  contents: 
  - !ruby/struct:SM::Flow::LI 
    body: ":default - The default value for the column."
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: ":index - Create an index on this column."
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: ":key - For foreign key columns, the column in the associated table that \
      this column references. Unnecessary if this column references the primary key \
      of the associated table."
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: ":null - Mark the column as allowing NULL values (if true), or not allowing \
      NULL values (if false). If unspecified, will default to whatever the database \
      default is."
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: ":on_delete - Specify the behavior of this column when being deleted. See \
      Schema::SQL#on_delete_clause for options."
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: ":on_update - Specify the behavior of this column when being updated. See \
      Schema::SQL#on_delete_clause for options."
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: ":size - The size of the column, generally used with string columns to specify \
      the maximum number of characters the column will hold."
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: ":unique - Mark the column is unique, generally has the same effect as creating \
      a unique index on the column."
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: ":unsigned - Make the column type unsigned, only useful for integer columns."
    label: '*'
full_name: Sequel::Schema::Generator#column
params: (name, type, opts = {})
name: column
is_singleton: false
aliases: []

