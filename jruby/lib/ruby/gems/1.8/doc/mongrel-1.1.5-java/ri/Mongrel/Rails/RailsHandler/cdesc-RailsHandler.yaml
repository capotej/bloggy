--- !ruby/object:RI::ClassDescription 
includes: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Implements a handler that can run Rails and serve files out of the Rails application's
    public directory. This lets you run your Rails application with Mongrel during
    development and testing, then use it also in production behind a server that's
    better at serving the static files.
- !ruby/struct:SM::Flow::P 
  body: The RailsHandler takes a mime_map parameter which is a simple suffix=mimetype
    mapping that it should add to the list of valid mime types.
- !ruby/struct:SM::Flow::P 
  body: 'It also supports page caching directly and will try to resolve a request
    in the following order:'
- !ruby/object:SM::Flow::LIST 
  type: :BULLET
  contents: 
  - !ruby/struct:SM::Flow::LI 
    body: If the requested exact PATH_INFO exists as a file then serve it.
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: If it exists at PATH_INFO+&quot;.html&quot; exists then serve that.
    label: '*'
  - !ruby/struct:SM::Flow::LI 
    body: Finally, construct a Mongrel::CGIWrapper and run Dispatcher.dispatch to
      have Rails go.
    label: '*'
- !ruby/struct:SM::Flow::P 
  body: This means that if you are using page caching it will actually work with Mongrel
    and you should see a decent speed boost (but not as fast as if you use a static
    server like Apache or Litespeed).
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: files
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: files
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: guard
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: guard
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: process
- !ruby/object:RI::MethodSummary 
  name: process
- !ruby/object:RI::MethodSummary 
  name: reload!
- !ruby/object:RI::MethodSummary 
  name: reload!
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: new
full_name: Mongrel::Rails::RailsHandler
constants: []

superclass: Mongrel::HttpHandler
name: RailsHandler
