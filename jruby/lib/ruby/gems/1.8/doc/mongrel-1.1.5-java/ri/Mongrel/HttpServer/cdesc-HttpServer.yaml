--- !ruby/object:RI::ClassDescription 
includes: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: This is the main driver of Mongrel, while the Mongrel::HttpParser and Mongrel::URIClassifier
    make up the majority of how the server functions. It's a very simple class that
    just has a thread accepting connections and a simple HttpServer.process_client
    function to do the heavy lifting with the IO and Ruby.
- !ruby/struct:SM::Flow::P 
  body: 'You use it by doing the following:'
- !ruby/struct:SM::Flow::VERB 
  body: "  server = HttpServer.new(&quot;0.0.0.0&quot;, 3000)\n  server.register(&quot;/stuff&quot;, \
    MyNiftyHandler.new)\n  server.run.join\n"
- !ruby/struct:SM::Flow::P 
  body: The last line can be just server.run if you don't want to join the thread
    used. If you don't though Ruby will mysteriously just exit on you.
- !ruby/struct:SM::Flow::P 
  body: Ruby's thread implementation is &quot;interesting&quot; to say the least.
    Experiments with <b>many</b> different types of IO processing simply cannot make
    a dent in it. Future releases of Mongrel will find other creative ways to make
    threads faster, but don't hold your breath until Ruby 1.9 is actually finally
    useful.
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: acceptor
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: acceptor
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: classifier
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: classifier
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: host
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: host
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: num_processors
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: num_processors
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: port
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: port
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: throttle
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: throttle
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: timeout
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: timeout
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: workers
- !ruby/object:RI::Attribute 
  comment: 
  rw: R
  name: workers
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: configure_socket_options
- !ruby/object:RI::MethodSummary 
  name: configure_socket_options
- !ruby/object:RI::MethodSummary 
  name: graceful_shutdown
- !ruby/object:RI::MethodSummary 
  name: graceful_shutdown
- !ruby/object:RI::MethodSummary 
  name: process_client
- !ruby/object:RI::MethodSummary 
  name: process_client
- !ruby/object:RI::MethodSummary 
  name: reap_dead_workers
- !ruby/object:RI::MethodSummary 
  name: reap_dead_workers
- !ruby/object:RI::MethodSummary 
  name: register
- !ruby/object:RI::MethodSummary 
  name: register
- !ruby/object:RI::MethodSummary 
  name: run
- !ruby/object:RI::MethodSummary 
  name: run
- !ruby/object:RI::MethodSummary 
  name: stop
- !ruby/object:RI::MethodSummary 
  name: stop
- !ruby/object:RI::MethodSummary 
  name: unregister
- !ruby/object:RI::MethodSummary 
  name: unregister
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: new
full_name: Mongrel::HttpServer
constants: []

superclass: Object
name: HttpServer
