--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  name: method_name
  rw: R
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: suite
comment: 
- !ruby/struct:SM::Flow::P 
  body: Ties everything together. If you subclass and add your own test methods, it takes care of making them into tests and wrapping those tests into a suite. It also does the nitty-gritty of actually running an individual test and collecting its results into a Test::Unit::TestResult object.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: STARTED
  value: name + "::STARTED"
- !ruby/object:RI::Constant 
  comment: 
  name: FINISHED
  value: name + "::FINISHED"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "These exceptions are not caught by #run."
  name: PASSTHROUGH_EXCEPTIONS
  value: "[NoMemoryError, SignalException, Interrupt,                                 SystemExit]"
full_name: Test::Unit::TestCase
includes: 
- !ruby/object:RI::IncludedModule 
  name: Assertions
- !ruby/object:RI::IncludedModule 
  name: Util::BacktraceFilter
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: ==
- !ruby/object:RI::MethodSummary 
  name: add_assertion
- !ruby/object:RI::MethodSummary 
  name: add_error
- !ruby/object:RI::MethodSummary 
  name: add_failure
- !ruby/object:RI::MethodSummary 
  name: default_test
- !ruby/object:RI::MethodSummary 
  name: name
- !ruby/object:RI::MethodSummary 
  name: passed?
- !ruby/object:RI::MethodSummary 
  name: run
- !ruby/object:RI::MethodSummary 
  name: setup
- !ruby/object:RI::MethodSummary 
  name: size
- !ruby/object:RI::MethodSummary 
  name: teardown
- !ruby/object:RI::MethodSummary 
  name: to_s
name: TestCase
superclass: Object
