--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Return a <tt>Regexp</tt> object that is the union of the given <em>pattern</em>s, i.e., will match any of its parts. The <em>pattern</em>s can be Regexp objects, in which case their options will be preserved, or Strings. If no arguments are given, returns <tt>/(?!)/</tt>.
- !ruby/struct:SM::Flow::VERB 
  body: "   Regexp.union                         #=&gt; /(?!)/\n   Regexp.union(&quot;penzance&quot;)             #=&gt; /penzance/\n   Regexp.union(&quot;skiing&quot;, &quot;sledding&quot;)   #=&gt; /skiing|sledding/\n   Regexp.union(/dogs/, /cats/i)        #=&gt; /(?-mix:dogs)|(?i-mx:cats)/\n"
full_name: Regexp::union
is_singleton: true
name: union
params: |
  Regexp.union([pattern]*)   => new_str

visibility: public
