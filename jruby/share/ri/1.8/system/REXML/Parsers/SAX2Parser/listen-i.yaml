--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "Listen arguments:"
- !ruby/struct:SM::Flow::P 
  body: Symbol, Array, Block
- !ruby/struct:SM::Flow::VERB 
  body: "   Listen to Symbol events on Array elements\n"
- !ruby/struct:SM::Flow::P 
  body: Symbol, Block
- !ruby/struct:SM::Flow::VERB 
  body: "  Listen to Symbol events\n"
- !ruby/struct:SM::Flow::P 
  body: Array, Listener
- !ruby/struct:SM::Flow::VERB 
  body: "   Listen to all events on Array elements\n"
- !ruby/struct:SM::Flow::P 
  body: Array, Block
- !ruby/struct:SM::Flow::VERB 
  body: "   Listen to :start_element events on Array elements\n"
- !ruby/struct:SM::Flow::P 
  body: Listener
- !ruby/struct:SM::Flow::VERB 
  body: "   Listen to All events\n"
- !ruby/struct:SM::Flow::P 
  body: "Symbol can be one of: :start_element, :end_element, :start_prefix_mapping, :end_prefix_mapping, :characters, :processing_instruction, :doctype, :attlistdecl, :elementdecl, :entitydecl, :notationdecl, :cdata, :xmldecl, :comment"
- !ruby/struct:SM::Flow::P 
  body: "There is an additional symbol that can be listened for: :progress. This will be called for every event generated, passing in the current stream position."
- !ruby/struct:SM::Flow::P 
  body: Array contains regular expressions or strings which will be matched against fully qualified element names.
- !ruby/struct:SM::Flow::P 
  body: Listener must implement the methods in SAX2Listener
- !ruby/struct:SM::Flow::P 
  body: Block will be passed the same arguments as a SAX2Listener method would be, where the method name is the same as the matched Symbol. See the SAX2Listener for more information.
full_name: REXML::Parsers::SAX2Parser#listen
is_singleton: false
name: listen
params: ( *args, &blok )
visibility: public
