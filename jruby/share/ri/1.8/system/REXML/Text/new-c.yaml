--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Constructor <tt>arg</tt> if a String, the content is set to the String. If a Text, the object is shallowly cloned.
- !ruby/struct:SM::Flow::P 
  body: <tt>respect_whitespace</tt> (boolean, false) if true, whitespace is respected
- !ruby/struct:SM::Flow::P 
  body: <tt>parent</tt> (nil) if this is a Parent object, the parent will be set to this.
- !ruby/struct:SM::Flow::P 
  body: <tt>raw</tt> (nil) This argument can be given three values. If true, then the value of used to construct this object is expected to contain no unescaped XML markup, and REXML will not change the text. If this value is false, the string may contain any characters, and REXML will escape any and all defined entities whose values are contained in the text. If this value is nil (the default), then the raw value of the parent will be used as the raw value for this node. If there is no raw value for the parent, and no value is supplied, the default is false. Use this field if you have entities defined for some text, and you don't want REXML to escape that text in output.
- !ruby/struct:SM::Flow::VERB 
  body: "  Text.new( &quot;&lt;&amp;&quot;, false, nil, false ) #-&gt; &quot;&amp;lt;&amp;amp;&quot;\n  Text.new( &quot;&amp;lt;&amp;amp;&quot;, false, nil, false ) #-&gt; &quot;&amp;amp;lt;&amp;amp;amp;&quot;\n  Text.new( &quot;&lt;&amp;&quot;, false, nil, true )  #-&gt; Parse exception\n  Text.new( &quot;&amp;lt;&amp;amp;&quot;, false, nil, true )  #-&gt; &quot;&amp;lt;&amp;amp;&quot;\n  # Assume that the entity &quot;s&quot; is defined to be &quot;sean&quot;\n  # and that the entity    &quot;r&quot; is defined to be &quot;russell&quot;\n  Text.new( &quot;sean russell&quot; )          #-&gt; &quot;&amp;s; &amp;r;&quot;\n  Text.new( &quot;sean russell&quot;, false, nil, true ) #-&gt; &quot;sean russell&quot;\n"
- !ruby/struct:SM::Flow::P 
  body: <tt>entity_filter</tt> (nil) This can be an array of entities to match in the supplied text. This argument is only useful if <tt>raw</tt> is set to false.
- !ruby/struct:SM::Flow::VERB 
  body: "  Text.new( &quot;sean russell&quot;, false, nil, false, [&quot;s&quot;] ) #-&gt; &quot;&amp;s; russell&quot;\n  Text.new( &quot;sean russell&quot;, false, nil, true, [&quot;s&quot;] ) #-&gt; &quot;sean russell&quot;\n"
- !ruby/struct:SM::Flow::P 
  body: In the last example, the <tt>entity_filter</tt> argument is ignored.
- !ruby/struct:SM::Flow::P 
  body: <tt>pattern</tt> INTERNAL USE ONLY
full_name: REXML::Text::new
is_singleton: true
name: new
params: (arg, respect_whitespace=false, parent=nil, raw=nil, entity_filter=nil, illegal=ILLEGAL )
visibility: public
