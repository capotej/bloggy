--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: "&lt;!ENTITY ...&gt; The argument passed to this method is an array of the entity declaration. It can be in a number of formats, but in general it returns (example, result):"
- !ruby/struct:SM::Flow::VERB 
  body: " &lt;!ENTITY % YN '&quot;Yes&quot;'&gt;\n [&quot;%&quot;, &quot;YN&quot;, &quot;'\\&quot;Yes\\&quot;'&quot;, &quot;\\&quot;&quot;]\n &lt;!ENTITY % YN 'Yes'&gt;\n [&quot;%&quot;, &quot;YN&quot;, &quot;'Yes'&quot;, &quot;s&quot;]\n &lt;!ENTITY WhatHeSaid &quot;He said %YN;&quot;&gt;\n [&quot;WhatHeSaid&quot;, &quot;\\&quot;He said %YN;\\&quot;&quot;, &quot;YN&quot;]\n &lt;!ENTITY open-hatch SYSTEM &quot;http://www.textuality.com/boilerplate/OpenHatch.xml&quot;&gt;\n [&quot;open-hatch&quot;, &quot;SYSTEM&quot;, &quot;\\&quot;http://www.textuality.com/boilerplate/OpenHatch.xml\\&quot;&quot;]\n &lt;!ENTITY open-hatch PUBLIC &quot;-//Textuality//TEXT Standard open-hatch boilerplate//EN&quot; &quot;http://www.textuality.com/boilerplate/OpenHatch.xml&quot;&gt;\n [&quot;open-hatch&quot;, &quot;PUBLIC&quot;, &quot;\\&quot;-//Textuality//TEXT Standard open-hatch boilerplate//EN\\&quot;&quot;, &quot;\\&quot;http://www.textuality.com/boilerplate/OpenHatch.xml\\&quot;&quot;]\n &lt;!ENTITY hatch-pic SYSTEM &quot;../grafix/OpenHatch.gif&quot; NDATA gif&gt;\n [&quot;hatch-pic&quot;, &quot;SYSTEM&quot;, &quot;\\&quot;../grafix/OpenHatch.gif\\&quot;&quot;, &quot;\\n\\t\\t\\t\\t\\t\\t\\tNDATA gif&quot;, &quot;gif&quot;]\n"
full_name: REXML::StreamListener#entitydecl
is_singleton: false
name: entitydecl
params: (content)
visibility: public
