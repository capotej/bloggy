--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::H 
  level: 2
  text: Description
- !ruby/struct:SM::Flow::P 
  body: Creates a new URI::MailTo object from components, with syntax checking.
- !ruby/struct:SM::Flow::P 
  body: Components can be provided as an Array or Hash. If an Array is used, the components must be supplied as [to, headers].
- !ruby/struct:SM::Flow::P 
  body: If a Hash is used, the keys are the component names preceded by colons.
- !ruby/struct:SM::Flow::P 
  body: The headers can be supplied as a pre-encoded string, such as &quot;subject=subscribe&amp;cc=address&quot;, or as an Array of Arrays like [['subject', 'subscribe'], ['cc', 'address']]
- !ruby/struct:SM::Flow::P 
  body: "Examples:"
- !ruby/struct:SM::Flow::VERB 
  body: "   require 'uri'\n\n   m1 = URI::MailTo.build(['joe@example.com', 'subject=Ruby'])\n   puts m1.to_s  -&gt;  mailto:joe@example.com?subject=Ruby\n\n   m2 = URI::MailTo.build(['john@example.com', [['Subject', 'Ruby'], ['Cc', 'jack@example.com']]])\n   puts m2.to_s  -&gt;  mailto:john@example.com?Subject=Ruby&amp;Cc=jack@example.com\n\n   m3 = URI::MailTo.build({:to =&gt; 'listman@example.com', :headers =&gt; [['subject', 'subscribe']]})\n   puts m3.to_s  -&gt;  mailto:listman@example.com?subject=subscribe\n"
full_name: URI::MailTo::build
is_singleton: true
name: build
params: (args)
visibility: public
