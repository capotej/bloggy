--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: open
comment: 
- !ruby/struct:SM::Flow::P 
  body: Zlib::GzipReader is the class for reading a gzipped file. GzipReader should be used an IO, or -IO-lie, object.
- !ruby/struct:SM::Flow::VERB 
  body: "  Zlib::GzipReader.open('hoge.gz') {|gz|\n    print gz.read\n  }\n\n  File.open('hoge.gz') do |f|\n    gz = Zlib::GzipReader.new(f)\n    print gz.read\n    gz.close\n  end\n\n  # TODO: test these.  Are they equivalent?  Can GzipReader.new take a\n  # block?\n"
- !ruby/struct:SM::Flow::H 
  level: 2
  text: Method Catalogue
- !ruby/struct:SM::Flow::P 
  body: The following methods in Zlib::GzipReader are just like their counterparts in IO, but they raise Zlib::Error or Zlib::GzipFile::Error exception if an error was found in the gzip file.
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: "#each"
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: "#each_line"
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: "#each_byte"
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: "#gets"
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: "#getc"
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: "#lineno"
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: "#lineno="
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: "#read"
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: "#readchar"
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: "#readline"
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: "#readlines"
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: "#ungetc"
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: Be careful of the footer of the gzip file. A gzip file has the checksum of pre-compressed data in its footer. GzipReader checks all uncompressed data against that checksum at the following cases, and if it fails, raises <tt>Zlib::GzipFile::NoFooter</tt>, <tt>Zlib::GzipFile::CRCError</tt>, or <tt>Zlib::GzipFile::LengthError</tt> exception.
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: When an reading request is received beyond the end of file (the end of compressed data). That is, when Zlib::GzipReader#read, Zlib::GzipReader#gets, or some other methods for reading returns nil.
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: When Zlib::GzipFile#close method is called after the object reaches the end of file.
  - !ruby/struct:SM::Flow::LI 
    label: "-"
    body: When Zlib::GzipReader#unused method is called after the object reaches the end of file.
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: The rest of the methods are adequately described in their own documentation.
constants: []

full_name: Zlib::GzipReader
includes: 
- !ruby/object:RI::IncludedModule 
  name: Enumerable
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: each
- !ruby/object:RI::MethodSummary 
  name: each_byte
- !ruby/object:RI::MethodSummary 
  name: each_line
- !ruby/object:RI::MethodSummary 
  name: eof
- !ruby/object:RI::MethodSummary 
  name: eof?
- !ruby/object:RI::MethodSummary 
  name: getc
- !ruby/object:RI::MethodSummary 
  name: gets
- !ruby/object:RI::MethodSummary 
  name: lineno
- !ruby/object:RI::MethodSummary 
  name: lineno=
- !ruby/object:RI::MethodSummary 
  name: pos
- !ruby/object:RI::MethodSummary 
  name: read
- !ruby/object:RI::MethodSummary 
  name: readchar
- !ruby/object:RI::MethodSummary 
  name: readline
- !ruby/object:RI::MethodSummary 
  name: readlines
- !ruby/object:RI::MethodSummary 
  name: rewind
- !ruby/object:RI::MethodSummary 
  name: tell
- !ruby/object:RI::MethodSummary 
  name: ungetc
- !ruby/object:RI::MethodSummary 
  name: unused
name: GzipReader
superclass: Zlib::GzipFile
