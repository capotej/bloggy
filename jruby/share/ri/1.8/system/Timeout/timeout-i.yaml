--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: if sec == nil or sec.zero?
comment: 
- !ruby/struct:SM::Flow::P 
  body: Executes the method's block. If the block execution terminates before <tt>sec</tt> seconds has passed, it returns true. If not, it terminates the execution and raises <tt>exception</tt> (which defaults to Timeout::Error).
- !ruby/struct:SM::Flow::P 
  body: "Note that this is both a method of module Timeout, so you can 'include Timeout' into your classes so they have a #timeout method, as well as a module method, so you can call it directly as Timeout.timeout()."
full_name: Timeout#timeout
is_singleton: false
name: timeout
params: (sec, exception=Error) {|if sec == nil or sec.zero?| ...}
visibility: public
