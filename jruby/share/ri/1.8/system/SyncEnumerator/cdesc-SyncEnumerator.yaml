--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: SyncEnumerator creates an Enumerable object from multiple Enumerable objects and enumerates them synchronously.
- !ruby/struct:SM::Flow::H 
  level: 2
  text: Example
- !ruby/struct:SM::Flow::VERB 
  body: "  require 'generator'\n\n  s = SyncEnumerator.new([1,2,3], ['a', 'b', 'c'])\n\n  # Yields [1, 'a'], [2, 'b'], and [3,'c']\n  s.each { |row| puts row.join(', ') }\n"
constants: []

full_name: SyncEnumerator
includes: 
- !ruby/object:RI::IncludedModule 
  name: Enumerable
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: each
- !ruby/object:RI::MethodSummary 
  name: end?
- !ruby/object:RI::MethodSummary 
  name: length
- !ruby/object:RI::MethodSummary 
  name: size
name: SyncEnumerator
superclass: Object
